name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: push docker image to docker hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }} 

      - name: login to docker hub
        id: docker-hub
        env:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
        run: |
          docker login -u $username -p $password 

      - name: build the docker image
        id: build-docker-image
        working-directory: node-project
        run: |
          ls -la 
          docker build . -f Dockerfile --no-cache -t ${{secrets.DOCKERHUB_USERNAME}}/demo-image-test:latest

      - name: push the docker image
        id: push-docker-image
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/demo-image-test:latest

  terraform-plan-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}         
      
      - name: Create cred.tfvars
        run: |
          echo 'project_id = "genial-diagram-434320-c8"' > Terraform/cred.tfvars
          echo 'region = "us-east1"' >> Terraform/cred.tfvars

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0
          
      - name: Terraform Init
        run: terraform init
        working-directory: Terraform/
      
      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod 755 ./opa
          sudo mv opa /usr/local/bin/
      
      - name: Terraform Plan
        run: |
          terraform plan -var-file=cred.tfvars -out=tfplan
          terraform show -json tfplan > tfplan.json
        working-directory: Terraform/
    
      
      - name: Evaluate Rego Policies
        id: evaluate_policies
        run: |
          EXIT_CODE=0
          conftest test tfplan.json -o table --all-namespaces -p policy/ || EXIT_CODE=$?
          echo "::set-output name=exit_code::$EXIT_CODE"
        working-directory: Terraform/ 
      
      - name: OPA Rules Evaluation Failed
        if: ${{ steps.evaluate_policies.outputs.exit_code != '0' }}
        run: |
          echo "The terraform resources you are deploying on the GCP Account are not complying with the defined standard. Please check the 'Evaluate Rego Policies' step to find the configuration that is not compliant and fix the code."
          exit 1

  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform/

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      #   working-directory: terraform/
